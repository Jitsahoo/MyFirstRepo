{"name": "test_deleted_taskid", "status": "broken", "statusDetails": {"message": "client_utility.request_exception.MyException: able to incomplete task using invalid taskid, lKai4Spr with code 200", "trace": "self = <test_task_utility.task_utility.TaskUtility object at 0x000001CDED86C430>, taskid = 'lKai4Spr'\n\n    def get_task_using_deleted_taskid(self,taskid):\n        try:\n            response = Request(Helper.url + \"/{task_id}\".format(task_id=taskid)).delete_request()\n>           assert response.status_code == 400, \"Delete task api didn't work\"\nE           AssertionError: Delete task api didn't work\n\n..\\test_task_utility\\task_utility.py:100: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_endpoint.test_task_update.TestTaskUpdate object at 0x000001CDED817B20>\n\n    def test_deleted_taskid(self):\n        logger.info(\"Executing GET Task API using deleted task id\")\n        logger.info('Sending the GET request with task id %s', TaskUtility.task_id)\n>       response = TaskUtility().get_task_using_deleted_taskid(TaskUtility.task_id)\n\ntest_task_update.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_task_utility.task_utility.TaskUtility object at 0x000001CDED86C430>, taskid = 'lKai4Spr'\n\n    def get_task_using_deleted_taskid(self,taskid):\n        try:\n            response = Request(Helper.url + \"/{task_id}\".format(task_id=taskid)).delete_request()\n            assert response.status_code == 400, \"Delete task api didn't work\"\n        except AssertionError as error:\n            logger.error(\"Getting assertion error while executing updated task api {error}\".format(error=error.args[0]))\n>           raise MyException(\"able to incomplete task using invalid taskid, {0} with code {1}\".format(taskid,response.status_code))\nE           client_utility.request_exception.MyException: able to incomplete task using invalid taskid, lKai4Spr with code 200\n\n..\\test_task_utility\\task_utility.py:103: MyException"}, "attachments": [{"name": "log", "source": "900349d8-06e2-4596-9428-352e454c0a3a-attachment.txt", "type": "text/plain"}], "start": 1595227010524, "stop": 1595227012556, "uuid": "cc4661cd-544f-4c49-86a2-075ca7b2b320", "historyId": "c0b1084a1162b9a1c9d2ab2e2f5853c5", "testCaseId": "62703f655914c5e819bef57d2532ad8c", "fullName": "test_endpoint.test_task_update.TestTaskUpdate#test_deleted_taskid", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('create_and_get_task')"}, {"name": "parentSuite", "value": "test_endpoint"}, {"name": "suite", "value": "test_task_update"}, {"name": "subSuite", "value": "TestTaskUpdate"}, {"name": "host", "value": "LAPTOP-FMV55K7E"}, {"name": "thread", "value": "13892-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_endpoint.test_task_update"}]}