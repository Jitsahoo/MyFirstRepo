{"name": "test_incomplete_task_with_invalid_taskid", "status": "broken", "statusDetails": {"message": "client_utility.request_exception.MyException: able to incomplete task using invalid task id , 123  ,with code 404", "trace": "self = <test_endpoint.test_task_post.TestTaskPost object at 0x000001CDED86F6D0>, taskid = 123\n\n    def incomplete_task_using_invalid_id(self,taskid):\n        try:\n            response = Request(Helper.url + \"/{task_id}/incomplete\".format(task_id=taskid)).post_request(\"\")\n>           assert 400 == response.status_code, \"able to completed the task using the invalid task id {task_id}\".format(task_id=taskid)\nE           AssertionError: able to completed the task using the invalid task id 123\n\n..\\test_task_utility\\task_utility.py:110: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_endpoint.test_task_post.TestTaskPost object at 0x000001CDED86F880>\n\n    def test_incomplete_task_with_invalid_taskid(self):\n        logger.info('Executing Incomplete Task API')\n        logger.info('Sending the POST request with task id %s', 123)\n>       response = TestTaskPost().incomplete_task_using_invalid_id(123)\n\ntest_task_post.py:41: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_endpoint.test_task_post.TestTaskPost object at 0x000001CDED86F6D0>, taskid = 123\n\n    def incomplete_task_using_invalid_id(self,taskid):\n        try:\n            response = Request(Helper.url + \"/{task_id}/incomplete\".format(task_id=taskid)).post_request(\"\")\n            assert 400 == response.status_code, \"able to completed the task using the invalid task id {task_id}\".format(task_id=taskid)\n        except AssertionError as error:\n            logger.error(\"Got the assertion error for get incompleted task as, {error}\".format(error=error.args[0]))\n>           raise MyException(\"able to incomplete task using invalid task id , {0}  ,with code {1}\".format(taskid,response.status_code))\nE           client_utility.request_exception.MyException: able to incomplete task using invalid task id , 123  ,with code 404\n\n..\\test_task_utility\\task_utility.py:113: MyException"}, "attachments": [{"name": "log", "source": "6b46e2bf-7164-4919-9bee-618dc06d268d-attachment.txt", "type": "text/plain"}], "start": 1595226996161, "stop": 1595226998209, "uuid": "daabc9f3-0632-4f2e-8f73-a39d3c780a39", "historyId": "20398bb36416d30485b574d8955bd58f", "testCaseId": "0ef4cdfa11bfec4cd3aaa7b3463afc7e", "fullName": "test_endpoint.test_task_post.TestTaskPost#test_incomplete_task_with_invalid_taskid", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('create_and_get_task')"}, {"name": "parentSuite", "value": "test_endpoint"}, {"name": "suite", "value": "test_task_post"}, {"name": "subSuite", "value": "TestTaskPost"}, {"name": "host", "value": "LAPTOP-FMV55K7E"}, {"name": "thread", "value": "13892-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_endpoint.test_task_post"}]}