{"name": "test_modify_task_with_invalid", "status": "broken", "statusDetails": {"message": "client_utility.request_exception.MyException: able to update the  task using invalid taskid , 456 with code 404", "trace": "self = <test_task_utility.task_utility.TaskUtility object at 0x000001CDED7BC850>, taskid = 456, update_task = {'completed': False, 'task': 'modifiedtask'}\n\n    def update_task_using_invalid_id(self,taskid,update_task):\n        try:\n            response = Request(Helper.url + \"/{task_id}\".format(task_id=taskid)).put_request(update_task)\n>           assert 400 == response.status_code, \"able to updated the task using invalid id\"\nE           AssertionError: able to updated the task using invalid id\n\n..\\test_task_utility\\task_utility.py:91: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_endpoint.test_task_update.TestTaskUpdate object at 0x000001CDED89CFA0>\n\n    def test_modify_task_with_invalid(self):\n        logger.info(\"Executing Modify Task API\")\n        logger.info('Sending the POST request with task id %s', 456)\n>       response = TaskUtility().update_task_using_invalid_id(456, update_task)\n\ntest_task_update.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_task_utility.task_utility.TaskUtility object at 0x000001CDED7BC850>, taskid = 456, update_task = {'completed': False, 'task': 'modifiedtask'}\n\n    def update_task_using_invalid_id(self,taskid,update_task):\n        try:\n            response = Request(Helper.url + \"/{task_id}\".format(task_id=taskid)).put_request(update_task)\n            assert 400 == response.status_code, \"able to updated the task using invalid id\"\n        except AssertionError as error:\n            logger.error(\"Getting assertion error while executing updated task api {error}\".format(error=error.args[0]))\n>           raise MyException(\"able to update the  task using invalid taskid , {0} with code {1}\".format(taskid,response.status_code))\nE           client_utility.request_exception.MyException: able to update the  task using invalid taskid , 456 with code 404\n\n..\\test_task_utility\\task_utility.py:94: MyException"}, "attachments": [{"name": "log", "source": "e0c24102-411d-4190-a5fa-7794fff9f38d-attachment.txt", "type": "text/plain"}], "start": 1595227014642, "stop": 1595227016690, "uuid": "3df947b1-5c7c-4acb-8bc9-c463e09dbc56", "historyId": "277152fc60587f62f70db64c9e90659b", "testCaseId": "7c4c2cc0b800fffec88275f4bd4b173d", "fullName": "test_endpoint.test_task_update.TestTaskUpdate#test_modify_task_with_invalid", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('create_and_get_task')"}, {"name": "parentSuite", "value": "test_endpoint"}, {"name": "suite", "value": "test_task_update"}, {"name": "subSuite", "value": "TestTaskUpdate"}, {"name": "host", "value": "LAPTOP-FMV55K7E"}, {"name": "thread", "value": "13892-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_endpoint.test_task_update"}]}